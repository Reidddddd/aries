<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <!-- RegionServer's configuration -->

  <!--
    General
  -->
  <property>
    <name>hbase.server.thread.wakefrequency</name>
    <value>10000</value>
  </property>
  <property>
    <name>hbase.client.retries.number</name>
    <value>31</value>
  </property>
  <property>
    <name>hbase.regionserver.msginterval</name>
    <value>3000</value>
  </property>
  <property>
    <name>hbase.regionserver.nonces.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.server.hashNonce.gracePeriod</name>
    <value>30 * 60 * 1000</value>
  </property>
  <property>
    <name>hbase.regionserver.numregionstoreport</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.client.scanner.timeout.period</name>
    <value>60000</value>
  </property>
  <property>
    <name>hbase.server.scanner.max.result.size</name>
    <value>100 * 1024 * 1024</value>
  </property>
  <property>
    <name>hbase.rpc.timeout</name>
    <value>60000</value>
  </property>
  <property>
    <name>hbase.region.server.rpc.minimum.scan.time.limit.delta</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.client.pause</name>
    <value>100</value>
  </property>
  <property>
    <name>hbase.client.pause.cqtbe</name>
    <value>100</value>
  </property>
  <property>
    <name>hbase.client.start.log.errors.counter</name>
    <value>9</value>
  </property>
  <property>
    <name>hbase.client.backpressure.enabled</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.assignment.usezk</name>
    <value>true</value>
  </property>


  <!--
    ZK related
  -->
  <property>
    <name>hbase.zookeeper.property.clientPort</name>
    <value>2181</value>
  </property>
  <property>
    <name>hbase.zookeeper.quorum</name>
    <value></value>
  </property>
  <property>
    <name>zookeeper.znode.parent</name>
    <value>/hbase</value>
  </property>
  <property>
    <name>zookeeper.znode.metaserver</name>
    <value>meta-region-server</value>
  </property>
  <property>
    <name>hbase.meta.replica.count</name>
    <value>1</value>
  </property>
  <property>
    <name>zookeeper.znode.rs</name>
    <value>rs</value>
  </property>
  <property>
    <name>zookeeper.znode.draining.rs</name>
    <value>draining</value>
  </property>
  <property>
    <name>zookeeper.znode.master</name>
    <value>master</value>
  </property>
  <property>
    <name>zookeeper.znode.backup.masters</name>
    <value>backup-masters</value>
  </property>
  <property>
    <name>zookeeper.znode.state</name>
    <value>running</value>
  </property>
  <property>
    <name>zookeeper.znode.unassigned</name>
    <value>region-in-transition</value>
  </property>
  <property>
    <name>zookeeper.znode.tableEnableDisable</name>
    <value>table</value>
  </property>
  <property>
    <name>zookeeper.znode.clusterId</name>
    <value>hbaseid</value>
  </property>
  <property>
    <name>zookeeper.znode.splitlog</name>
    <value>splitWAL</value>
  </property>
  <property>
    <name>zookeeper.znode.balancer</name>
    <value>balancer</value>
  </property>
  <property>
    <name>zookeeper.znode.regionNormalizer</name>
    <value>normalizer</value>
  </property>
  <property>
    <name>zookeeper.znode.switch</name>
    <value>switch</value>
  </property>
  <property>
    <name>zookeeper.znode.tableLock</name>
    <value>table-lock</value>
  </property>
  <property>
    <name>zookeeper.znode.snapshot.cleanup</name>
    <value>snapshot-cleanup</value>
  </property>
  <property>
    <name>zookeeper.znode.recovering.regions</name>
    <value>recovering-regions</value>
  </property>
  <property>
    <name>zookeeper.znode.namespace</name>
    <value>namespace</value>
  </property>
  <property>
    <name>zookeeper.znode.masterMaintenance</name>
    <value>master-maintenance</value>
  </property>
  <property>
    <name>zookeeper.session.timeout</name>
    <value>180 * 1000</value>
  </property>
  <property>
    <name>zookeeper.recovery.retry</name>
    <value>3</value>
  </property>
  <property>
    <name>zookeeper.recovery.retry.intervalmill</name>
    <value>1000</value>
  </property>
  <property>
    <name>zookeeper.recovery.retry.maxsleeptime</name>
    <value>60000</value>
  </property>
  <property>
    <name>zookeeper.dump.connection.timeout</name>
    <value>1000</value>
  </property>
  <property>
    <name>hbase.zookeeper.authfailed.retries.number</name>
    <value>15</value>
  </property>
  <property>
    <name>hbase.zookeeper.authfailed.pause</name>
    <value>100</value>
  </property>
  <property>
    <name>zookeeper.multi.max.size</name>
    <value>1024*1024</value>
  </property>
  <property>
    <name>zookeeper.factory.class</name>
    <value>DefaultZooKeeperFactory</value>
  </property>


  <!--
    TableLockManager
  -->
  <property>
    <name>hbase.table.lock.enable</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.table.write.lock.timeout.ms</name>
    <value>600 * 1000</value>
  </property>
  <property>
    <name>hbase.table.read.lock.timeout.ms</name>
    <value>600 * 1000</value>
  </property>
  <property>
    <name>hbase.table.lock.expire.ms</name>
    <value>600 * 1000</value>
  </property>
  <property>
    <name>hbase.security.authorization</name>
    <value></value>
  </property>
  <property>
    <name></name>
    <value></value>
  </property>
  <property>
    <name></name>
    <value></value>
  </property>
  <property>
    <name></name>
    <value></value>
  </property>
  <property>
    <name></name>
    <value></value>
  </property>
  <property>
    <name></name>
    <value></value>
  </property>
  <property>
    <name></name>
    <value></value>
  </property>


  <!--
    FileSystem
  -->
  <property>
    <name>hbase.regionserver.checksum.verify</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.filesystem.reorder.blocks</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.meta.versions</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.meta.blocksize</name>
    <value>8 * 1024</value>
  </property>


  <!--
    Memstore & Flush related
  -->
  <property>
    <name>hbase.hregion.memstore.mslab.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.hregion.memstore.mslab.chunksize</name>
    <value>2097152</value>
    <description>2MB</description>
  </property>
  <property>
    <name>hbase.hregion.memstore.mslab.max.allocation</name>
    <value>262144</value>
    <value>256KB</value>
  </property>
  <property>
    <name>hbase.hregion.memstore.chunkpool.maxsize</name>
    <value>0.0f</value>
  </property>
  <property>
    <name>hbase.hregion.memstore.chunkpool.initialsize</name>
    <value>0.0f</value>
  </property>
  <property>
    <name>hbase.regionserver.global.memstore.size</name>
    <value>0.4f</value>
  </property>
  <property>
    <name>hbase.regionserver.global.memstore.size.lower.limit</name>
    <value>0.95f</value>
  </property>
  <property>
    <name>hbase.hregion.memstore.flush.size</name>
    <value>134217728</value>
    <description>128MB</description>
  </property>
  <property>
    <name>hbase.hregion.percolumnfamilyflush.size.lower.bound</name>
    <value>16777216</value>
    <description>16MB</description>
  </property>
  <property>
    <name>hbase.regionserver.optionalcacheflushinterval</name>
    <value>3600000</value>
    <description>1 hour</description>
  </property>
  <property>
    <name>hbase.regionserver.flush.per.changes</name>
    <value>30000000</value>
  </property>
  <property>
    <name>hbase.regionserver.flush.check.period</name>
    <value>10000</value>
  </property>
  <property>
    <name>hbase.regionserver.periodicmemstoreflusher.rangeofdelayseconds</name>
    <value>300</value>
    <description>300 seconds</description>
  </property>
  <property>
    <name>hbase.hregion.preclose.flush.size</name>
    <value>5242880</value>
    <description>5MB</description>
  </property>
  <property>
    <name>hbase.hregion.memstore.block.multiplier</name>
    <value>4</value>
  </property>
  <property>
    <name>hbase.hstore.flusher.count</name>
    <value>2</value>
  </property>
  <property>
    <name>hbase.hstore.blockingWaitTime</name>
    <value>90000</value>
  </property>
  <property>
    <name>hbase.hstore.blockingStoreFiles</name>
    <value>7</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.kv.max</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.hstore.flush.retries.number</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.client.operation.timeout</name>
    <value>1200000</value>
  </property>
  <property>
    <name>hbase.rpc.shortoperation.timeout</name>
    <value>10000</value>
  </property>


  <!--
    BlockCache: L1 & L2
  -->
  <property>
    <name>hfile.block.cache.size</name>
    <value>0.4f</value>
  </property>
  <property>
    <name>hbase.blockcache.minblocksize</name>
    <value>64*1024</value>
    <description>64KB</description>
  </property>
  <property>
    <name>hbase.lru.blockcache.min.factor</name>
    <value>0.95f</value>
  </property>
  <property>
    <name>hbase.lru.blockcache.acceptable.factor</name>
    <value>0.99f</value>
  </property>
  <property>
    <name>hbase.lru.blockcache.single.percentage</name>
    <value>0.25f</value>
  </property>
  <property>
    <name>hbase.lru.blockcache.multi.percentage</name>
    <value>0.50f</value>
  </property>
  <property>
    <name>hbase.lru.blockcache.memory.percentage</name>
    <value>0.25f</value>
  </property>
  <property>
    <name>hbase.lru.blockcache.hard.capacity.limit.factor</name>
    <value>1.2f</value>
  </property>
  <property>
    <name>hbase.lru.rs.inmemoryforcemode</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.lru.max.block.size</name>
    <value>16L*1024L*1024L</value>
    <description>16MB</description>
  </property>
  <property>
    <name>hbase.blockcache.use.external</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.blockcache.external.class</name>
    <value></value>
  </property>
  <property>
    <name>hbase.bucketcache.ioengine</name>
    <value></value>
    <description>file:|offheap|heap</description>
  </property>
  <property>
    <name>hbase.bucketcache.size</name>
    <value>0F</value>
  </property>
  <property>
    <name>hbase.bucketcache.writer.threads</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.bucketcache.writer.queuelength</name>
    <value>64</value>
  </property>
  <property>
    <name>hbase.bucketcache.persistent.path</name>
    <value></value>
  </property>
  <property>
    <name>hbase.bucketcache.bucket.sizes</name>
    <value></value>
  </property>
  <property>
    <name>hbase.bucketcache.ioengine.errors.tolerated.duration</name>
    <value>60*1000</value>
    <description>1 minute</description>
  </property>
  <property>
    <name>hbase.bucketcache.acceptfactor</name>
    <value>0.95f</value>
  </property>
  <property>
    <name>hbase.bucketcache.minfactor</name>
    <value>0.85f</value>
  </property>
  <property>
    <name>hbase.bucketcache.extrafreefactor</name>
    <value>0.10f</value>
  </property>
  <property>
    <name>hbase.bucketcache.single.factor</name>
    <value>0.25f</value>
  </property>
  <property>
    <name>hbase.bucketcache.multi.factor</name>
    <value>0.50f</value>
  </property>
  <property>
    <name>hbase.bucketcache.memory.factor</name>
    <value>0.25f</value>
  </property>
  <property>
    <name>hbase.rs.cacheblocksonwrite</name>
    <value>false</value>
  </property>
  <property>
    <name>hfile.block.index.cacheonwrite</name>
    <value>false</value>
  </property>
  <property>
    <name>hfile.block.bloom.cacheonwrite</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.rs.evictblocksonclose</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.block.data.cachecompressed</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.rs.prefetchblocksonopen</name>
    <value>false</value>
  </property>
  <property>
    <name>CACHE_DATA_IN_L1</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.hfile.drop.behind.compaction</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.bucketcache.combinedcache.enabled</name>
    <value>true</value>
  </property>


  <!--
    WAL related: Write, Read, Split, Roll
  -->
  <property>
    <name>hbase.regionserver.hlog.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.wal.provider</name>
    <value>DefaultWALProvider</value>
    <description>RegionGroupingProvider</description>
  </property>
  <property>
    <name>hbase.wal.regiongrouping.strategy</name>
    <value>BoundedGroupingStrategy</value>
    <description>IdentityGroupingStrategy,NamespaceGroupingStrategy</description>
  </property>
  <property>
    <name>hbase.wal.dir</name>
    <value>${hbase.rootdir}</value>
  </property>
  <property>
    <name>hbase.wal.storage.policy</name>
    <value>NONE</value>
  </property>
  <property>
    <name>hbase.coprocessor.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.regionserver.logroll.multiplier</name>
    <value>0.95f</value>
  </property>
  <property>
    <name>hbase.regionserver.maxlogs</name>
    <value>32</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.tolerable.lowreplication</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.lowreplication.rolllimit</name>
    <value>5</value>
  </property>
  <property>
    <name>hbase.regionserver.logroll.errors.tolerated</name>
    <value>0</value>
  </property>
  <property>
    <name>hbase.wal.hsync</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.regionserver.wal.slowsync.ms</name>
    <value>100</value>
  </property>
  <property>
    <name>hbase.regionserver.wal.roll.on.sync.ms</name>
    <value>10000</value>
  </property>
  <property>
    <name>hbase.regionserver.wal.slowsync.roll.threshold</name>
    <value>100</value>
  </property>
  <property>
    <name>hbase.regionserver.wal.slowsync.roll.interval.ms</name>
    <value>60000</value>
    <description>1 minute</description>
  </property>
  <property>
    <name>hbase.regionserver.wal.sync.timeout</name>
    <value>5*60*1000</value>
    <description>5 minutes</description>
  </property>
  <property>
    <name>hbase.regionserver.wal.disruptor.event.count</name>
    <value>1024*16</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.syncer.count</name>
    <value>5</value>
  </property>
  <property>
    <name>hbase.regionserver.waltrailer.warn.size</name>
    <value>1024*1024</value>
    <description>1MB</description>
  </property>
  <property>
    <name>hbase.regionserver.hlog.replication</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.regionserver.recoverededits.blocksize</name>
    <value>${dfs.blockSize}</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.blocksize</name>
    <value>${dfs.blockSize}</value>
  </property>
  <property>
    <name>hbase.regionserver.wal.tags.enablecompression</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.regionserver.wal.codec</name>
    <value></value>
  </property>
  <property>
    <name>hbase.regionserver.wal.enablecompression</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.hlog.open.timeout</name>
    <value>300000</value>
  </property>
  <property>
    <name>hbase.split.writer.creation.bounded</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.splitlog.buffersize</name>
    <value>128*1024*1024</value>
    <description>128MB</description>
  </property>
  <property>
    <name>hbase.regionserver.wal.logreplay.batch.size</name>
    <value>64</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.splitlog.writer.threads</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.hlog.split.skip.errors</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.splitlog.report.interval.loglines</name>
    <value>1024</value>
  </property>
  <property>
    <name>hbase.splitlog.report.openedfiles</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.splitlog.corrupt.dir</name>
    <value>corrupt</value>
  </property>
  <property>
    <name>hbase.fs.tmp.dir</name>
    <value></value>
  </property>
  <property>
    <name>hbase.splitlog.zk.retries</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.splitlog.max.resubmit</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.splitlog.manager.timeout</name>
    <value>120000</value>
  </property>
  <property>
    <name>hbase.hregion.edits.replay.skip.errors</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.regionserver.logreplay.timeout</name>
    <value>60000</value>
  </property>
  <property>
    <name>hbase.regionserver.logroll.period</name>
    <value>3600000</value>
  </property>
  <property>
    <name>hbase.regionserver.hlog.check.lowreplication.interval</name>
    <value>30000</value>
  </property>


  <!--
    Compaction & Split related
  -->
  <property>
    <name>hbase.regionserver.compaction.check.period</name>
    <value>10000</value>
  </property>
  <property>
    <name>hbase.regionserver.compactionChecker.majorCompactPriority</name>
    <value>Integer.MAX_VALUE</value>
  </property>
  <property>
    <name>hbase.regionserver.compaction.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.regionserver.regionSplitLimit</name>
    <value>1000</value>
  </property>
  <property>
    <name>hbase.regionserver.thread.compaction.large</name>
    <value>1</value>
  </property>
  <property>
    <name>hbase.regionserver.thread.compaction.small</name>
    <value>1</value>
  </property>
  <property>
    <name>hbase.regionserver.thread.split</name>
    <value>1</value>
  </property>
  <property>
    <name>hbase.regionserver.thread.merge</name>
    <value>1</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.throughput.higher.bound</name>
    <value>20*1024*1024</value>
    <description>20MB</description>
  </property>
  <property>
    <name>hbase.hstore.compaction.throughput.lower.bound</name>
    <value>10*1024*1024</value>
    <description>10MB</description>
  </property>
  <property>
    <name>hbase.hstore.compaction.throughput.offpeak</name>
    <value>Long.MAX_VALUE</value>
  </property>
  <property>
    <name>hbase.offpeak.start.hour</name>
    <value>-1</value>
  </property>
  <property>
    <name>hbase.offpeak.end.hour</name>
    <value>-1</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.throughput.control.check.interval</name>
    <value>${hbase.hstore.compaction.throughput.lower.bound}</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.throughput.tune.period</name>
    <value>60000</value>
  </property>
  <property>
    <name>hbase.server.compactchecker.interval.multiplier</name>
    <value>1000</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.max.size</name>
    <value>Long.MAX_VALUE</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.max.size.offpeak</name>
    <value>${hbase.hstore.compaction.max.size}</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.min.size</name>
    <value></value>
  </property>
  <property>
    <name>hbase.hstore.compaction.min</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.max</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.ratio</name>
    <value>1.2f</value>
  </property>
  <property>
    <name>hbase.hstore.compaction.ratio.offpeak</name>
    <value>5.0F</value>
  </property>
  <property>
    <name>hbase.regionserver.thread.compaction.throttle</name>
    <value>1000*60*60*24*7</value>
    <description>1 week</description>
  </property>
  <property>
    <name>hbase.hregion.majorcompaction.jitter</name>
    <value>0.5f</value>
  </property>
  <property>
    <name>hbase.hstore.min.locality.to.skip.major.compact</name>
    <value>0f</value>
  </property>
  <!-- Let's skip data tiered storage first -->


  <!--
    StoreEngine
  -->
  <property>
    <name>hbase.hstore.engine.class</name>
    <value>DefaultStoreEngine</value>
  </property>
  <property>
    <name>hbase.hstore.defaultengine.compactor.class</name>
    <value>DefaultCompactor</value>
  </property>
  <property>
    <name>hbase.hstore.defaultengine.compactionpolicy.class</name>
    <value>ExploringCompactionPolicy</value>
  </property>
  <property>
    <name>hbase.hstore.defaultengine.storeflusher.class</name>
    <value>DefaultStoreFlusher</value>
  </property>


  <!--
    RPC Service
  -->
  <property>
    <name>hbase.rpc.controllerfactory.class</name>
    <value>RpcControllerFactory.class</value>
  </property>
  <property>
    <name>hbase.rpc.callerfactory.class</name>
    <value>RpcRetryingCallerFactory.class</value>
  </property>
  <property>
    <name>hbase.client.serverside.retries.multiplier</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.ipc.server.scan.vtime.weight</name>
    <value>1.0f</value>
  </property>
  <property>
    <name></name>
  </property>
  <property>
    <name>hbase.rpc.rows.warning.threshold</name>
    <value>5000</value>
  </property>
  <property>
    <name>hbase.region.server.rpc.scheduler.factory.class</name>
    <value>SimpleRpcSchedulerFactory</value>
  </property>
  <property>
    <name>hbase.regionserver.handler.count</name>
    <value>30</value>
  </property>
  <property>
    <name>hbase.regionserver.metahandler.count</name>
    <value>20</value>
  </property>
  <property>
    <name>hbase.regionserver.replication.handler.count</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.ipc.server.max.callqueue.length</name>
    <value>10*handler</value>
  </property>
  <property>
    <name>hbase.ipc.server.priority.max.callqueue.length</name>
    <value>${hbase.ipc.server.max.callqueue.length}</value>
  </property>
  <property>
    <name>hbase.ipc.server.callqueue.type</name>
    <value>fifo</value>
  </property>
  <property>
    <name>hbase.ipc.server.callqueue.read.ratio</name>
    <value>0</value>
  </property>
  <property>
    <name>hbase.ipc.server.callqueue.handler.factor</name>
    <value>0</value>
  </property>
  <property>
    <name>hbase.ipc.server.callqueue.scan.ratio</name>
    <value>0</value>
  </property>
  <property>
    <name>hbase.ipc.server.reservoir.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.ipc.server.reservoir.max.buffer.size</name>
    <value>1024 * 1024</value>
  </property>
  <property>
    <name>hbase.ipc.server.reservoir.initial.buffer.size</name>
    <value>16 * 1024</value>
  </property>
  <property>
    <name>hbase.ipc.server.reservoir.initial.max</name>
    <value>60</value>
  </property>
  <property>
    <name>hbase.ipc.server.reservoir.direct.buffer</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.ipc.server.max.callqueue.size</name>
    <value>1024 * 1024 * 1024</value>
  </property>
  <property>
    <name>hbase.ipc.server.read.threadpool.size</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.ipc.client.connection.maxidletime</name>
    <value>1000</value>
  </property>
  <property>
    <name>hbase.ipc.client.kill.max</name>
    <value>10</value>
  </property>
  <property>
    <name>hbase.ipc.client.idlethreshold</name>
    <value>4000</value>
  </property>
  <property>
    <name>hbase.ipc.client.call.purge.timeout</name>
    <value>120000</value>
  </property>
  <property>
    <name>hbase.ipc.warn.response.time</name>
    <value>10000</value>
  </property>
  <property>
    <name>hbase.ipc.warn.response.size</name>
    <value>100 * 1024 * 1024</value>
  </property>
  <property>
    <name>hbase.ipc.min.client.request.timeout</name>
    <value>20</value>
  </property>
  <property>
    <name>hbase.ipc.max.request.size</name>
    <value>256 * 1024 * 1024</value>
  </property>
  <property>
    <name>hbase.ipc.server.listen.queue.size</name>
    <value>128</value>
  </property>
  <property>
    <name>hbase.ipc.server.tcpnodelay</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.ipc.server.tcpkeepalive</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.rpc.protection</name>
    <value>auth</value>
    <description>auth-int,auth-conf</description>
  </property>
  <property>
    <name>hbase.ipc.cellblock.decompression.buffersize.multiplier</name>
    <value>3</value>
  </property>
  <property>
    <name>hbase.ipc.cellblock.building.initial.buffersize</name>
    <value>16 * 1024</value>
  </property>


</configuration>
